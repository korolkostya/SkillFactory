import numpy as np


def game_core_v1(number):
    """Берем число из середины интервала и сравниваем с загаданным, тем самым сокращая возможные варианты в половину.
       Если загаданное число больше предсказания, то берем интервал с большими значениями.
       Если загаданное число меньше предсказания, то берем интревал с меньшими знаечениями.
       После также находим середину интервала и сравниваем с загаданным числом,
       тем самым сокращаем варианты в половину.
       В нашем случае значения от 1 до 100, значит середина интервала будет 51, тк используется целочисленное деление,
       то начальное значение интервала будет 1, а конечное значение начального интервала будет 101.
       Функция принимает загаданное число и возвращает число попыток"""
    count = 1
    num1 = 1
    num2 = 101
    predict = (num1 + num2) // 2
    while number != predict:
        count += 1
        if number > predict:
            num1 = predict
            predict = (num1 + num2) // 2
        elif number < predict:
            num2 = predict
            predict = (num1 + num2) // 2
    return count  # выход из цикла, если угадали


def score_game(game_core):
    """Запускаем игру 1000 раз, чтобы узнать, как быстро игра угадывает число"""
    count_ls = []
    np.random.seed(1)  # фиксируем RANDOM SEED, чтобы ваш эксперимент был воспроизводим!
    random_array = np.random.randint(1, 101, size=1000)
    for number in random_array:
        count_ls.append(game_core(number))
    score = int(np.mean(count_ls))
    print(f"Ваш алгоритм угадывает число в среднем за {score} попыток")
    return score


score_game(game_core_v1)
